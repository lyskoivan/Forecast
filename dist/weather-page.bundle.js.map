{"version":3,"sources":["webpack:///./src/pages/WeatherPage/WeatherPage.scss?8a31","webpack:///./src/pages/WeatherPage/WeatherPage.scss","webpack:///./src/components/WeatherHeader/index.tsx","webpack:///./src/components/WeatherHeader/WeatherHeader.tsx","webpack:///./src/components/WeatherHeader/WeatherHeader.scss?fef2","webpack:///./src/components/WeatherHeader/WeatherHeader.scss","webpack:///./src/components/TodayForecast/index.tsx","webpack:///./src/components/TodayForecast/TodayForecast.tsx","webpack:///./src/components/ForecastList/index.tsx","webpack:///./src/components/ForecastList/ForecastList.tsx","webpack:///./src/components/ForecastList/ForecastList.scss?eebd","webpack:///./src/components/ForecastList/ForecastList.scss","webpack:///./src/components/ForecastListItem/index.tsx","webpack:///./src/components/ForecastListItem/ForecastListItem.tsx","webpack:///./src/components/ForecastListItem/ForecastListItem.scss?c841","webpack:///./src/components/ForecastListItem/ForecastListItem.scss","webpack:///./src/components/FutureForecast/index.tsx","webpack:///./src/components/FutureForecast/FutureForecast.tsx","webpack:///./src/redux/forecast/forecastOperations.ts","webpack:///./src/services/weatherAPI.ts","webpack:///./src/utils/helpers.ts","webpack:///./src/redux/forecast/forecastSelectors.ts","webpack:///./src/redux/forecast/forecastActions.ts","webpack:///./src/pages/WeatherPage/index.tsx","webpack:///./src/pages/WeatherPage/WeatherPage.tsx"],"names":[],"mappings":"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","file":"weather-page.bundle.js","sourcesContent":["var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../node_modules/sass-loader/dist/cjs.js!./WeatherPage.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".weather-title {\\n  margin: 20px 0px;\\n  text-align: center;\\n  font-family: 'Kaushan Script', cursive;\\n  color: #333333;\\n  font-weight: 800;\\n  font-size: 30px; }\\n\\n.weather-button {\\n  margin-left: 10px;\\n  cursor: pointer;\\n  font-weight: 600;\\n  font-size: 18px;\\n  background-color: #e7e7e7;\\n  opacity: 0.6;\\n  border: 1px solid transparent;\\n  padding: 15px;\\n  transition: all ease-in-out 0.2s;\\n  border-radius: 2px;\\n  outline: none; }\\n  .weather-button:hover {\\n    opacity: 1; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import WeatherHeader from './WeatherHeader';\n\nexport default WeatherHeader;\n","import React from 'react';\nimport { NavLink, withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport './WeatherHeader.scss';\n\ninterface MatchParams {\n  id: string;\n}\n\nconst WeatherHeader = ({ match, location }: RouteComponentProps<MatchParams>): JSX.Element => (\n  <header className=\"WeatherHeader\">\n    <ul className=\"WeatherHeader-list\">\n      <li className=\"WeatherHeader-list-item\">\n        <NavLink\n          className=\"WeatherHeader-list-link\"\n          activeClassName=\"WeatherHeader-list-link__active\"\n          to={{\n            pathname: `${match.url}/today`,\n            search: location.search,\n          }}\n        >\n          Today\n        </NavLink>\n      </li>\n      <li className=\"WeatherHeader-list-item\">\n        <NavLink\n          className=\"WeatherHeader-list-link\"\n          activeClassName=\"WeatherHeader-list-link__active\"\n          to={{\n            pathname: `${match.url}/future`,\n            search: location.search,\n          }}\n        >\n          Future\n        </NavLink>\n      </li>\n    </ul>\n  </header>\n);\n\nexport default withRouter(WeatherHeader);\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../node_modules/sass-loader/dist/cjs.js!./WeatherHeader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".WeatherHeader-list {\\n  margin: 0;\\n  list-style-type: none;\\n  box-shadow: 0px 7px 12px 1px rgba(0, 0, 0, 0.75);\\n  display: flex;\\n  align-items: center; }\\n  .WeatherHeader-list-item {\\n    padding: 25px;\\n    color: #333333;\\n    font-size: 22px;\\n    font-weight: 700; }\\n  .WeatherHeader-list-link {\\n    text-decoration: none;\\n    color: black;\\n    transition: color ease-in-out 0.3s; }\\n    .WeatherHeader-list-link:hover {\\n      color: #b81149; }\\n    .WeatherHeader-list-link__active {\\n      color: #b81149; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import TodayForecast from './TodayForecast';\n\nexport default TodayForecast;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport ForecastList from '../ForecastList';\nimport { getCurrentWeather } from '../../redux/forecast/forecastSelectors';\nimport { CityWeather, MainState } from '../../redux/forecast/forecastTypes';\n\ninterface TodayForecastStateProps {\n  weatherList: CityWeather[];\n}\n\nconst mapStateToProps = (store: MainState): TodayForecastStateProps => ({\n  weatherList: getCurrentWeather(store),\n});\n\nconst TodayForecast = ({ weatherList }: TodayForecastStateProps): JSX.Element => (\n  <section>\n    <ForecastList forecastList={weatherList} />\n  </section>\n);\n\nexport default connect(mapStateToProps, null)(TodayForecast);\n","import ForecastList from './ForecastList';\n\nexport default ForecastList;\n","import React from 'react';\n\nimport './ForecastList.scss';\n\nimport ForecastListItem from '../ForecastListItem';\nimport { CityWeather } from '../../redux/forecast/forecastTypes';\n\ninterface ForecastList {\n  forecastList: CityWeather[];\n}\n\nconst ForecastList = ({ forecastList }: ForecastList): JSX.Element => (\n  <ul className=\"ForecastList\">\n    {forecastList.map(\n      (item): JSX.Element => (\n        <ForecastListItem key={item.dt} forecast={item} />\n      ),\n    )}\n  </ul>\n);\n\nexport default ForecastList;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../node_modules/sass-loader/dist/cjs.js!./ForecastList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ForecastList {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  max-width: 90%; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import ForecastListItem from './ForecastListItem';\n\nexport default ForecastListItem;\n","import React from 'react';\n\nimport './ForecastListItem.scss';\n\nimport { CityWeather } from '../../redux/forecast/forecastTypes';\n\nconst getIcon = (icon = ''): string => `https://openweathermap.org/img/wn/${icon}@2x.png`;\n\ninterface ForecastListItem {\n  forecast: CityWeather;\n}\n\nconst ForecastListItem = ({ forecast }: ForecastListItem): JSX.Element => (\n  <article className=\"ForecastListItem\">\n    <div className=\"ForecastListItem-wrapper\">\n      <div className=\"ForecastListItem-main\">\n        <img alt={forecast.weather[0].main} src={getIcon(forecast.weather[0].icon)} />\n        <p>{`${forecast.main.temp} °C`}</p>\n      </div>\n      <h2 className=\"ForecastListItem-date\">{forecast.dt_txt}</h2>\n    </div>\n    <div className=\"ForecastListItem-stat\">\n      <p className=\"ForecastListItem-stat-text\">{`Min: ${forecast.main.temp_min}°`}</p>\n      <p className=\"ForecastListItem-stat-text\">{`Max: ${forecast.main.temp_max}°`}</p>\n      <p className=\"ForecastListItem-stat-text\">{`Feels: ${forecast.main.feels_like}°`}</p>\n      <p className=\"ForecastListItem-stat-text\">{`Humidity: ${forecast.main.humidity}%`}</p>\n    </div>\n  </article>\n);\n\nexport default ForecastListItem;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../node_modules/sass-loader/dist/cjs.js!./ForecastListItem.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ForecastListItem {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 95%;\\n  margin-top: 15px;\\n  padding: 25px;\\n  box-shadow: 13px 12px 12px -7px rgba(0, 0, 0, 0.75);\\n  color: #333333; }\\n  .ForecastListItem-wrapper {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center; }\\n  .ForecastListItem-main {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    font-weight: 700;\\n    font-size: 20px; }\\n  .ForecastListItem-stat {\\n    display: flex;\\n    justify-content: flex-start;\\n    flex-wrap: wrap;\\n    color: #333333;\\n    font-weight: 600;\\n    font-size: 18px; }\\n    .ForecastListItem-stat-text {\\n      padding-right: 15px; }\\n  .ForecastListItem-date {\\n    font-size: 20px;\\n    font-weight: 700; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import FutureForecast from './FutureForecast';\n\nexport default FutureForecast;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport ForecastList from '../ForecastList';\nimport { getWeekWeather } from '../../redux/forecast/forecastSelectors';\nimport { CityWeather, MainState } from '../../redux/forecast/forecastTypes';\n\ninterface FutureForecastStateProps {\n  weatherList: CityWeather[];\n}\n\nconst mapStateToProps = (store: MainState): FutureForecastStateProps => ({\n  weatherList: getWeekWeather(store),\n});\n\nconst FutureForecast = ({ weatherList }: FutureForecastStateProps): JSX.Element => (\n  <section>\n    <ForecastList forecastList={weatherList} />\n  </section>\n);\n\nexport default connect(mapStateToProps, null)(FutureForecast);\n","import * as actions from './forecastActions';\nimport getWeatherForecast from '../../services/weatherAPI';\n\nimport { Dispatch } from '../store';\nimport currentForecastFilter from '../../utils/helpers';\nimport { Error, CityWeather } from './forecastTypes';\n\ninterface AxiosDataType {\n  list: CityWeather[];\n}\n\ninterface AxiosType {\n  data: AxiosDataType;\n  status: number;\n  statusText: string;\n}\n\nconst getWeather = (query: string) => (dispatch: Dispatch): void => {\n  dispatch(actions.currentWeatherStart());\n  dispatch(actions.weekWeatherStart());\n\n  getWeatherForecast(query)\n    .then((res: AxiosType) => {\n      const { list } = res.data;\n\n      const currentForecast = list.filter((listItem): boolean => currentForecastFilter(listItem));\n\n      dispatch(actions.currentWeatherSuccess(currentForecast));\n      dispatch(actions.weekWeatherSuccess(list));\n    })\n    .catch((err: Error) => {\n      dispatch(actions.currentWeatherError(err));\n      dispatch(actions.weekWeatherError(err));\n    });\n};\n\nexport default getWeather;\n","import axios from 'axios';\n\nconst APIkey = 'd123024470f09ca0e7431a75e6756167';\n\nconst getWeatherForecast = (city: string): Promise<any> =>\n  axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${APIkey}`);\n\nexport default getWeatherForecast;\n","import { startOfToday, startOfTomorrow } from 'date-fns';\n\nimport { CityWeather } from '../redux/forecast/forecastTypes';\n\nconst currentForecastFilter = (timeWeather: CityWeather): boolean => {\n  const startDay = Date.parse(startOfToday().toString()) <= Date.parse(timeWeather.dt_txt);\n  const endDay = Date.parse(startOfTomorrow().toString()) > Date.parse(timeWeather.dt_txt);\n  return startDay && endDay;\n};\n\nexport default currentForecastFilter;\n","import { MainState, CityWeather, Error } from './forecastTypes';\n\nexport const getCurrentWeather = (store: MainState): CityWeather[] => store.forecast.currentWeather;\nexport const getWeekWeather = (store: MainState): CityWeather[] => store.forecast.weekWeather;\nexport const getSearchHistory = (store: MainState): string[] => store.forecast.searchHistory;\nexport const getSearchQuery = (store: MainState): string => store.forecast.searchQuery;\nexport const getIsLoading = (store: MainState): boolean => store.forecast.isLoading;\nexport const getError = (store: MainState): Error => store.forecast.error;\n","import * as types from './forecastTypes';\n\n// Search Query\n\nexport const searchQuery = (query: string): types.SearchQueryTypes => ({\n  type: types.SEARCH_QUERY,\n  payload: { query },\n});\n\n// Search History\n\nexport const searchHistory = (history: string): types.SearchHistoryTypes => ({\n  type: types.SEARCH_HISTORY,\n  payload: { history },\n});\n\nexport const deleteFirstSearchHistory = (city: string): types.SearchHistoryTypes => ({\n  type: types.DELETE_FIRST_SEARCH_HISTORY,\n  payload: { city },\n});\n\n// Current Weather\n\nexport const currentWeatherStart = (): types.CityWeatherTypes => ({\n  type: types.CURRENT_WEATHER_START,\n});\n\nexport const currentWeatherSuccess = (weather: types.CityWeather[]): types.CityWeatherTypes => ({\n  type: types.CURRENT_WEATHER_SUCCESS,\n  payload: { weather },\n});\n\nexport const currentWeatherError = (error: types.Error): types.CityWeatherTypes => ({\n  type: types.CURRENT_WEATHER_ERROR,\n  payload: { error },\n});\n\n// Week Weather\n\nexport const weekWeatherStart = (): types.WeekWeatherTypes => ({\n  type: types.WEEK_WEATHER_START,\n});\n\nexport const weekWeatherSuccess = (weather: types.CityWeather[]): types.WeekWeatherTypes => ({\n  type: types.WEEK_WEATHER_SUCCESS,\n  payload: { weather },\n});\n\nexport const weekWeatherError = (error: types.Error): types.WeekWeatherTypes => ({\n  type: types.WEEK_WEATHER_ERROR,\n  payload: { error },\n});\n","import WeatherPage from './WeatherPage';\n\nexport default WeatherPage;\n","import { connect } from 'react-redux';\nimport queryString from 'query-string';\nimport React, { Component, MouseEvent } from 'react';\nimport { Route, RouteComponentProps } from 'react-router-dom';\n\nimport './WeatherPage.scss';\n\nimport WeatherHeader from '../../components/WeatherHeader';\nimport TodayForecast from '../../components/TodayForecast';\nimport FutureForecast from '../../components/FutureForecast';\nimport getWeather from '../../redux/forecast/forecastOperations';\nimport { MainState, CityWeather, Error } from '../../redux/forecast/forecastTypes';\nimport { getCurrentWeather, getError, getIsLoading } from '../../redux/forecast/forecastSelectors';\n\nconst getCategoryFromLocation = (location: RouteComponentProps['location']): string | string[] =>\n  queryString.parse(location.search).city;\n\ninterface MatchParams {\n  id: string;\n}\n\ninterface WeatherPageStateProps {\n  todayForecast: CityWeather[];\n  reduxError: Error;\n  isLoading: boolean;\n}\n\nconst mapStateToProps = (store: MainState): WeatherPageStateProps => ({\n  todayForecast: getCurrentWeather(store),\n  reduxError: getError(store),\n  isLoading: getIsLoading(store),\n});\n\nconst mapDispatchToProps = {\n  getWeatherProp: getWeather,\n};\n\ninterface WeatherPageDispatchProps {\n  getWeatherProp: Function;\n}\n\ntype WeatherPageProps = WeatherPageStateProps & WeatherPageDispatchProps & RouteComponentProps<MatchParams>;\n\nclass WeatherPage extends Component<WeatherPageProps, {}> {\n  componentDidMount(): void {\n    const { location, getWeatherProp } = this.props;\n\n    const query = getCategoryFromLocation(location);\n\n    if (query) {\n      getWeatherProp(query.toString());\n    }\n  }\n\n  handleOnClick = (e: MouseEvent<HTMLButtonElement>): void => {\n    e.preventDefault();\n    const { history } = this.props;\n\n    history.push('/');\n  };\n\n  render(): JSX.Element {\n    const { match, isLoading, location, reduxError } = this.props;\n    const query = getCategoryFromLocation(location);\n\n    return (\n      <div>\n        {isLoading ? (\n          <h1>Loading...</h1>\n        ) : (\n          <section className=\"weather\">\n            {!reduxError ? (\n              <WeatherHeader />\n            ) : (\n              <h1 className=\"weather-title\">We don&apos;t have a weather forecast for that city.</h1>\n            )}\n            <div>\n              {!reduxError && <h1 className=\"weather-title\">{`Weather forecast of ${query}`}</h1>}\n              <button type=\"button\" onClick={this.handleOnClick} className=\"weather-button\">\n                Back to search\n              </button>\n            </div>\n            {!reduxError && <Route path={`${match.path}/today`} component={TodayForecast} />}\n            {!reduxError && <Route path={`${match.path}/future`} component={FutureForecast} />}\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherPage);\n"],"sourceRoot":""}